FROM node:22-alpine as base
ENV NODE_ENV=production
WORKDIR /base

COPY package.json .
COPY yarn.lock .
RUN yarn --frozen-lockfile --ignore-scripts --production \ && yarn cache clean

## Remove unnecessary files from `node_modules` directory
RUN ( wget -q -O /dev/stdout https://gobinaries.com/tj/node-prune | sh ) \
 && node-prune


# BEGIN:::Stage 2: Build Stage
FROM node:22-alpine AS build
ENV NODE_ENV=development
ARG APP
# Setting up the modules directory
WORKDIR /build

COPY --from=base /base/node_modules ./node_modules
COPY . .
# run build
RUN yarn build
# END:::Stage 2: Build Stage


FROM node:22-alpine as deploy
ENV NODE_ENV=production
WORKDIR /app

# COPY --from=base /base/node_modules ./node_modules
# COPY --from=base /base/package.json ./
COPY --from=build /build/dist ./dist
COPY package-docker.json ./package.json
RUN yarn --frozen-lockfile --ignore-scripts --production \ && yarn cache clean

EXPOSE 3001

CMD [ "yarn", "serve" ]